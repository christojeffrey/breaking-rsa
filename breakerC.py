from Crypto.Util.number import *
topE = 2 ** 16
minE = 2 ** 15

# try to find the private 

cipherText = 8783099732701438054995149616601601344597704241547401578119355597241134453593854732602000404715437626300264759220786786109530079013181118734405474670247881177633861089656461098636270803099509285163767552739312994808960778742924757873348545892326647523657503897335477961703597975220996310175243302059366403980469288441507624495074676378559716949766245325109124609675170287606529314931020084683359916032667546696450834776091491067707714824503919545869364771586475078146172495143149594965317121379859203888900584528360849975973427889893631915484130664329837575874815985994437509346939443212973912694501369823429217141216

n = 29752209756887150516508107790545066190158569457233152813749305886821965103106412718700797527662458932709109957042577644439136016398041802158247888258874518818863171321103314955863617948962026281887854350439090372919927954426938121196533062581629553930735399792041004160548944223090460659026795967974236805344930115937553906146816134606055386153615544791971916648198611129316807994801112400012198035748056480266388055390575826798015165661990056519494891786477343615942857129096333739348513946453844055965111680044999623713963884357735074986021168371021832992064758167968112682973651292196975683995096303277968196543171

# e = 59375

for e in range(minE, topE):
    plainTextLong = pow(cipherText, e, n)
    try:
        plainText = long_to_bytes(plainTextLong).decode()
    except:
        continue
    # if start with KRIPTOGRAFIITB then it's correct, stop the loop
    if plainText.startswith("KRIPTOGRAFIITB"):
        break

print(plainTextLong)
# long to bytes to string
print(plainText)